//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KiiniHelp.ServiceUbicacion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceUbicacion.IServiceUbicacion")]
    public interface IServiceUbicacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerPais", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerPaisResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Pais> ObtenerPais(int idTipoUsuario, bool insertarSeleccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerCampus", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerCampusResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Campus> ObtenerCampus(int idTipoUsuario, int idPais, bool insertarSeleccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerTorres", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerTorresResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Torre> ObtenerTorres(int idTipoUsuario, int idCampus, bool insertarSeleccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerPisos", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerPisosResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Piso> ObtenerPisos(int idTipoUsuario, int idTorre, bool insertarSeleccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerZonas", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerZonasResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Zona> ObtenerZonas(int idTipoUsuario, int idPiso, bool insertarSeleccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerSubZonas", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerSubZonasResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.SubZona> ObtenerSubZonas(int idTipoUsuario, int idZona, bool insertarSeleccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerSiteRacks", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerSiteRacksResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.SiteRack> ObtenerSiteRacks(int idTipoUsuario, int idSubZona, bool insertarSeleccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacion", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionResponse")]
        KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacion(int idPais, System.Nullable<int> idCampus, System.Nullable<int> idTorre, System.Nullable<int> idPiso, System.Nullable<int> idZona, System.Nullable<int> idSubZona, System.Nullable<int> idSiteRack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/GuardarUbicacion", ReplyAction="http://tempuri.org/IServiceUbicacion/GuardarUbicacionResponse")]
        void GuardarUbicacion(KiiniNet.Entities.Cat.Operacion.Ubicacion ubicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionUsuario", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionUsuarioResponse")]
        KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacionUsuario(int idUbicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicaciones", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionesResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> ObtenerUbicaciones(System.Nullable<int> idTipoUsuario, System.Nullable<int> idPais, System.Nullable<int> idCampus, System.Nullable<int> idTorre, System.Nullable<int> idPiso, System.Nullable<int> idZona, System.Nullable<int> idSubZona, System.Nullable<int> idSiteRack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/BuscarPorPalabra", ReplyAction="http://tempuri.org/IServiceUbicacion/BuscarPorPalabraResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> BuscarPorPalabra(System.Nullable<int> idTipoUsuario, System.Nullable<int> idPais, System.Nullable<int> idCampus, System.Nullable<int> idTorre, System.Nullable<int> idPiso, System.Nullable<int> idZona, System.Nullable<int> idSubZona, System.Nullable<int> idSiteRack, string filtro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ActualizarUbicacion", ReplyAction="http://tempuri.org/IServiceUbicacion/ActualizarUbicacionResponse")]
        void ActualizarUbicacion(KiiniNet.Entities.Cat.Operacion.Ubicacion ub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionById", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionByIdResponse")]
        KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacionById(int idUbicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/HabilitarUbicacion", ReplyAction="http://tempuri.org/IServiceUbicacion/HabilitarUbicacionResponse")]
        void HabilitarUbicacion(int idUbicacion, bool habilitado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionesGrupos", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionesGruposResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> ObtenerUbicacionesGrupos(System.Collections.Generic.List<int> grupos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionesByIdUbicacion", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionesByIdUbicacionResponse")]
        System.Collections.Generic.List<int> ObtenerUbicacionesByIdUbicacion(int idUbicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionByRegionCode", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionByRegionCodeResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> ObtenerUbicacionByRegionCode(string regionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionFiscal", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionFiscalResponse")]
        KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacionFiscal(int idColonia, string calle, string noExt, string noInt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUbicacionChannel : KiiniHelp.ServiceUbicacion.IServiceUbicacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUbicacionClient : System.ServiceModel.ClientBase<KiiniHelp.ServiceUbicacion.IServiceUbicacion>, KiiniHelp.ServiceUbicacion.IServiceUbicacion {
        
        public ServiceUbicacionClient() {
        }
        
        public ServiceUbicacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUbicacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUbicacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUbicacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Pais> ObtenerPais(int idTipoUsuario, bool insertarSeleccion) {
            return base.Channel.ObtenerPais(idTipoUsuario, insertarSeleccion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Campus> ObtenerCampus(int idTipoUsuario, int idPais, bool insertarSeleccion) {
            return base.Channel.ObtenerCampus(idTipoUsuario, idPais, insertarSeleccion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Torre> ObtenerTorres(int idTipoUsuario, int idCampus, bool insertarSeleccion) {
            return base.Channel.ObtenerTorres(idTipoUsuario, idCampus, insertarSeleccion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Piso> ObtenerPisos(int idTipoUsuario, int idTorre, bool insertarSeleccion) {
            return base.Channel.ObtenerPisos(idTipoUsuario, idTorre, insertarSeleccion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.Zona> ObtenerZonas(int idTipoUsuario, int idPiso, bool insertarSeleccion) {
            return base.Channel.ObtenerZonas(idTipoUsuario, idPiso, insertarSeleccion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.SubZona> ObtenerSubZonas(int idTipoUsuario, int idZona, bool insertarSeleccion) {
            return base.Channel.ObtenerSubZonas(idTipoUsuario, idZona, insertarSeleccion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Arbol.Ubicaciones.SiteRack> ObtenerSiteRacks(int idTipoUsuario, int idSubZona, bool insertarSeleccion) {
            return base.Channel.ObtenerSiteRacks(idTipoUsuario, idSubZona, insertarSeleccion);
        }
        
        public KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacion(int idPais, System.Nullable<int> idCampus, System.Nullable<int> idTorre, System.Nullable<int> idPiso, System.Nullable<int> idZona, System.Nullable<int> idSubZona, System.Nullable<int> idSiteRack) {
            return base.Channel.ObtenerUbicacion(idPais, idCampus, idTorre, idPiso, idZona, idSubZona, idSiteRack);
        }
        
        public void GuardarUbicacion(KiiniNet.Entities.Cat.Operacion.Ubicacion ubicacion) {
            base.Channel.GuardarUbicacion(ubicacion);
        }
        
        public KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacionUsuario(int idUbicacion) {
            return base.Channel.ObtenerUbicacionUsuario(idUbicacion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> ObtenerUbicaciones(System.Nullable<int> idTipoUsuario, System.Nullable<int> idPais, System.Nullable<int> idCampus, System.Nullable<int> idTorre, System.Nullable<int> idPiso, System.Nullable<int> idZona, System.Nullable<int> idSubZona, System.Nullable<int> idSiteRack) {
            return base.Channel.ObtenerUbicaciones(idTipoUsuario, idPais, idCampus, idTorre, idPiso, idZona, idSubZona, idSiteRack);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> BuscarPorPalabra(System.Nullable<int> idTipoUsuario, System.Nullable<int> idPais, System.Nullable<int> idCampus, System.Nullable<int> idTorre, System.Nullable<int> idPiso, System.Nullable<int> idZona, System.Nullable<int> idSubZona, System.Nullable<int> idSiteRack, string filtro) {
            return base.Channel.BuscarPorPalabra(idTipoUsuario, idPais, idCampus, idTorre, idPiso, idZona, idSubZona, idSiteRack, filtro);
        }
        
        public void ActualizarUbicacion(KiiniNet.Entities.Cat.Operacion.Ubicacion ub) {
            base.Channel.ActualizarUbicacion(ub);
        }
        
        public KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacionById(int idUbicacion) {
            return base.Channel.ObtenerUbicacionById(idUbicacion);
        }
        
        public void HabilitarUbicacion(int idUbicacion, bool habilitado) {
            base.Channel.HabilitarUbicacion(idUbicacion, habilitado);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> ObtenerUbicacionesGrupos(System.Collections.Generic.List<int> grupos) {
            return base.Channel.ObtenerUbicacionesGrupos(grupos);
        }
        
        public System.Collections.Generic.List<int> ObtenerUbicacionesByIdUbicacion(int idUbicacion) {
            return base.Channel.ObtenerUbicacionesByIdUbicacion(idUbicacion);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Cat.Operacion.Ubicacion> ObtenerUbicacionByRegionCode(string regionCode) {
            return base.Channel.ObtenerUbicacionByRegionCode(regionCode);
        }
        
        public KiiniNet.Entities.Cat.Operacion.Ubicacion ObtenerUbicacionFiscal(int idColonia, string calle, string noExt, string noInt) {
            return base.Channel.ObtenerUbicacionFiscal(idColonia, calle, noExt, noInt);
        }
    }
}
